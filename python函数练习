{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6\n"
     ]
    }
   ],
   "source": [
    "#函数\n",
    "def y(x1,x2,x3):\n",
    "    return (x1+x2+x3)\n",
    "print(y(1,2,3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6\n",
      "6\n"
     ]
    }
   ],
   "source": [
    "#有默认参数\n",
    "def y(x1,x2,x3=3):\n",
    "    return (x1+x2+x3)\n",
    "print(y(1,2))\n",
    "print(y(1,2,3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4)\n"
     ]
    }
   ],
   "source": [
    "#数乘以元组/列表是重复，加法是连接，*参数，表示后面的参数变成她的元组\n",
    "def y(x1,*x2):\n",
    "    return x1*x2\n",
    "print (y(6,2,3,4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6\n"
     ]
    }
   ],
   "source": [
    "#lambda函数，类似于匿名函数，内联函数\n",
    "y=lambda x1,x2,x3:x1+x2+x3\n",
    "print(y(1,2,3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "#全局变量,内外都要声明(基本数据类型，)\n",
    "global x1\n",
    "x1=0\n",
    "def y():\n",
    "    x1=3\n",
    "y()\n",
    "print(x1)\n",
    "def t():\n",
    "    global x1\n",
    "    x1=3\n",
    "t()\n",
    "print(x1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[3, 2, 3]\n",
      "[3, 2, 3]\n",
      "[1, 2, 3]\n"
     ]
    }
   ],
   "source": [
    "#组合数据类型,内部没有定义，自动找全局，不需要再次声明，内部有定义，没有声明全局则当局部变量\n",
    "global x1\n",
    "x1=[1,2,3]\n",
    "def y():\n",
    "    x1[0]=3\n",
    "y()\n",
    "print(x1)\n",
    "def t():\n",
    "    global x1\n",
    "    x1[0]=3\n",
    "x1=[1,2,3]\n",
    "t()\n",
    "print(x1)\n",
    "def p():\n",
    "    x1=[1,2,3]\n",
    "    x1[0]=3\n",
    "x1=[1,2,3]\n",
    "p()\n",
    "print(x1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
